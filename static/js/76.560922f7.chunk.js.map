{"version":3,"file":"static/js/76.560922f7.chunk.js","mappings":"sQACA,GAAgB,SAAW,uBAAuB,OAAS,qBAAqB,QAAU,uB,SCoE1F,EA9Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,6CAAyCF,EAAzC,4BAAoEG,EAAAA,EAApE,mBA4BT,OA1BAC,EAAAA,EAAAA,YAAU,WACRL,GAAU,GAEV,IAAMM,EAAO,mCAAG,yGACYC,EAAAA,EAAAA,GAAYJ,GADxB,YACRK,EADQ,yBAGZR,GAAU,GACJS,GAJM,OAIQD,EAAYX,MAC1Ba,EAAgBD,EAAQE,QAAO,SAACC,EAAMC,GAC1C,OAAOJ,EAAQK,WAAU,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,EAAKI,EAApB,MAA4BH,CACzD,IACDf,EAAQY,GARI,8BAiBN,IAAIO,MAAM,iBAjBJ,4CAAH,qDAoBbX,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAU,SAACmB,EAAA,EAAD,KACX,eAAIC,UAAWC,EAAAA,SAAf,SACGvB,GAAQA,EAAKwB,QACZ,8BACGxB,EAAKyB,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAIN,UAAWC,EAAAA,OAAf,WACE,gBACED,UAAWC,EAAAA,QACXM,IACEH,EAAY,8CAC+BA,GAD/B,yFAIdI,IAAKH,KAEP,eAAIL,UAAWC,EAAAA,KAAf,SAA0BI,KAC1B,eAAGL,UAAWC,EAAAA,UAAd,wBAAyCK,OAXXT,EADxB,OAiBZ,+EAEE,MAGX,C,mEClED,EAAyB,uB,SCczB,EAZe,WACb,OACE,SAAC,KAAD,CACEY,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVZ,UAAWC,GAGhB,C,6ECbM,IAAMhB,EAAU,mCAEVG,EAAc,SAAAyB,GAAG,OAC5BC,MAAMD,GACHE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,oBAAqBF,EAArC,GAHc,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","functions/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castEl\":\"Cast_castEl__4ZArS\",\"castImg\":\"Cast_castImg__T4WbF\"};","import { fetchMovies } from 'functions/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport css from './Cast.module.css';\nimport { API_KEY } from '../../functions/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const { movieId } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    setLoader(true);\n\n    const getCast = async () => {\n      const castResults = await fetchMovies(URL);\n      if (castResults) {\n        setLoader(false);\n        const results = [...castResults.cast];\n        const uniqueResults = results.filter((item, index) => {\n          return results.findIndex(obj => obj.id === item.id) === index;\n        });\n        setCast(uniqueResults);\n        // results.map(cast => ({\n        //   id: cast.id,\n        //   profile_path: cast.profile_path,\n        //   name: cast.name,\n        //   character: cast.character,\n        // }));\n        // setCast(results);\n      } else {\n        throw new Error('Error in Cast');\n      }\n    };\n    getCast();\n  }, [URL]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <ul className={css.castList}>\n        {cast && cast.length ? (\n          <>\n            {cast.map(({ id, profile_path, name, character }) => (\n              <li className={css.castEl} key={id}>\n                <img\n                  className={css.castImg}\n                  src={\n                    profile_path\n                      ? `https://www.themoviedb.org/t/p/w500/${profile_path}`\n                      : `https://web.natur.cuni.cz/zoology/eei/wp-content/uploads/2021/04/no_image_portrait.jpg`\n                  }\n                  alt={name}\n                />\n                <h3 className={css.name}>{name}</h3>\n                <p className={css.character}>Character: {character}</p>\n              </li>\n            ))}\n          </>\n        ) : (\n          <p>Cast information is not available for this movie.</p>\n        )}\n      </ul>{' '}\n    </>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Blocks } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Blocks\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      className={css.loader}\n    />\n  );\n};\n\nexport default Loader;\n","export const API_KEY = 'e6237ab11d37482483effc956909f434';\n\nexport const fetchMovies = url =>\n  fetch(url)\n    .then(resp => resp.json())\n    .catch(error => console.log('fetchmovie error:', error));\n\n// export const handleMoviesData = (response, movies) => {\n//   response.forEach(movie => {\n//     return movies.push({\n//       movieID: movie.id,\n//       movieTitle: movie.title,\n//       movieBackdrop: IMG_PATH + movie.backdrop_path,\n//     });\n//   });\n// };\n"],"names":["useState","cast","setCast","loader","setLoader","movieId","useParams","URL","API_KEY","useEffect","getCast","fetchMovies","castResults","results","uniqueResults","filter","item","index","findIndex","obj","id","Error","Loader","className","css","length","map","profile_path","name","character","src","alt","visible","height","width","ariaLabel","url","fetch","then","resp","json","catch","error","console","log"],"sourceRoot":""}