{"version":3,"file":"static/js/135.c8aa2b75.chunk.js","mappings":"8LAAO,IAAMA,EAAU,mCAEVC,EAAc,SAAAC,GAAG,OAC5BC,MAAMD,GACHE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,oBAAqBF,EAArC,GAHc,C,yHCD9B,EAA0B,8BAA1B,EAAiE,6BAAjE,EAAsG,4BAAtG,EAA6I,+BAA7I,EAA4L,oCAA5L,EAA6O,iCAA7O,EAAoR,0B,uCC0EpR,EAnEqB,WACnB,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,GADcC,EAAAA,EAAAA,MACGC,QACjBC,EAAG,6CAAyCH,EAAzC,oBAAuDd,EAAAA,GAUhE,OARAkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACYlB,EAAAA,EAAAA,GAAYgB,GADxB,OACXG,EADW,OAEjBP,EAAWO,GAFM,2CAAH,qDAIhBD,GACD,GAAE,CAACF,KAGF,iCACE,qBAASI,UAAWC,EAApB,UACGV,EAAQW,cACP,gBACEF,UAAWC,EACXE,IACEZ,EAAQW,YAAR,yCACsCX,EAAQW,aAD9C,kHAIFE,IAAKb,EAAQc,SAGjB,gCACE,eAAIL,UAAWC,EAAf,SAA2BV,EAAQc,SACnC,2BACE,2BACE,4CACA,uCAAUd,EAAQe,oBAEpB,2BACE,0CACoBC,IAAnBhB,EAAQiB,SACP,oCAAUjB,EAAQiB,OACfC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACTC,KAAK,iBAId,iBAAKZ,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,uBACA,uBAAIV,EAAQsB,qBAIlB,gCACE,eAAIb,UAAWC,EAAf,qCACA,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMa,GAAG,OAAT,UACE,mBAAQC,KAAK,SAAb,qBAEF,SAAC,KAAD,CAAMD,GAAG,UAAT,UACE,mBAAQC,KAAK,SAAb,2BAGJ,SAAC,KAAD,SAIP,C,uBCzED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOtC,GAEP,YADAgC,EAAOhC,EAET,CAEIqC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO1C,KAAKqC,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMb,EACR,GACF,CACF,C","sources":["functions/api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const API_KEY = 'e6237ab11d37482483effc956909f434';\n\nexport const fetchMovies = url =>\n  fetch(url)\n    .then(resp => resp.json())\n    .catch(error => console.log('fetchmovie error:', error));\n\n// export const handleMoviesData = (response, movies) => {\n//   response.forEach(movie => {\n//     return movies.push({\n//       movieID: movie.id,\n//       movieTitle: movie.title,\n//       movieBackdrop: IMG_PATH + movie.backdrop_path,\n//     });\n//   });\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"poster\":\"MovieDetails_poster__yO7gD\",\"title\":\"MovieDetails_title__cUGs9\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"overviewTitle\":\"MovieDetails_overviewTitle__WmGe8\",\"additional\":\"MovieDetails_additional__+f3rh\",\"btn\":\"MovieDetails_btn__7L5IF\"};","import { useEffect, useState } from 'react';\nimport css from './MovieDetails.module.css';\nimport { useParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { fetchMovies, API_KEY } from 'functions/api';\nimport {} from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n\n  const queryParams = useParams();\n  const id = queryParams.movieId;\n  const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  useEffect(() => {\n    const getDetails = async () => {\n      const detailsResults = await fetchMovies(URL);\n      setDetails(detailsResults);\n    };\n    getDetails();\n  }, [URL]);\n\n  return (\n    <>\n      <section className={css.wrapper}>\n        {details.poster_path && (\n          <img\n            className={css.poster}\n            src={\n              details.poster_path\n                ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n                : `https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg`\n            }\n            alt={details.title}\n          />\n        )}\n        <article>\n          <h2 className={css.title}>{details.title}</h2>\n          <ul>\n            <li>\n              <h3> User rating: </h3>\n              <span> â˜† {details.vote_average}</span>\n            </li>\n            <li>\n              <h3>Genres: </h3>\n              {details.genres !== undefined && (\n                <span>{`${details.genres\n                  .map(genre => genre.name)\n                  .join(' | ')}`}</span>\n              )}\n            </li>\n          </ul>\n          <div className={css.overview}>\n            <h3 className={css.overviewTitle}>Overview</h3>\n            <p>{details.overview}</p>\n          </div>\n        </article>\n      </section>\n      <section>\n        <h3 className={css.additional}>Additional information</h3>\n        <div className={css.btn}>\n          <Link to=\"cast\">\n            <button type=\"button\">Cast</button>\n          </Link>\n          <Link to=\"reviews\">\n            <button type=\"button\">Reviews</button>\n          </Link>\n        </div>\n        <Outlet />\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchMovies","url","fetch","then","resp","json","catch","error","console","log","useState","details","setDetails","id","useParams","movieId","URL","useEffect","getDetails","detailsResults","className","css","poster_path","src","alt","title","vote_average","undefined","genres","map","genre","name","join","overview","to","type","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err"],"sourceRoot":""}