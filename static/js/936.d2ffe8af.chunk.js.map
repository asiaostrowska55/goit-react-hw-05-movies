{"version":3,"file":"static/js/936.d2ffe8af.chunk.js","mappings":"mLACA,EAAyB,uB,SCczB,EAZe,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,UAAWC,GAGhB,C,6ECbM,IAAMC,EAAU,mCAEVC,EAAc,SAAAC,GAAG,OAC5BC,MAAMD,GACHE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,oBAAqBF,EAArC,GAHc,C,6HCD9B,EAAuB,mB,mCC6DvB,EAvDa,WACX,IAAMG,EAAQ,kEAA8DX,EAAAA,GAE5E,GAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAmB,mCAAG,6FAC1BD,GAAU,GADgB,UAEHf,EAAAA,EAAAA,GAAYU,GAFT,YAEpBO,EAFoB,gCAKxBF,GAAU,GACJG,GANkB,OAMHD,EAASE,SANN,kBAOjBD,EAASE,KAAI,SAAAC,GAAK,MAAK,CAC5BC,MAAOD,EAAMC,MACbC,GAAIF,EAAME,GAFa,KAPD,cAYlB,IAAIC,MAAM,oBAZQ,4CAAH,qDAyBzB,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMzB,EAAW,mCAAG,oGACKgB,IADL,OACZC,EADY,OAElBJ,EAAUI,GAFQ,2CAAH,qDAIjBjB,GAED,GAAE,CAAC0B,OAGF,2BACE,4BACE,mDACA,wBACGZ,GACC,SAACa,EAAA,EAAD,IAEAf,GACAA,EAAOgB,QACPhB,EAAOQ,KAAI,gBAAGG,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMzB,UAAWC,EAAU+B,GAAE,kBAAaN,GAA1C,UACE,uBAAID,OAFCC,EADA,UAYtB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","functions/api.js","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Blocks } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Blocks\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      className={css.loader}\n    />\n  );\n};\n\nexport default Loader;\n","export const API_KEY = 'e6237ab11d37482483effc956909f434';\n\nexport const fetchMovies = url =>\n  fetch(url)\n    .then(resp => resp.json())\n    .catch(error => console.log('fetchmovie error:', error));\n\n// export const handleMoviesData = (response, movies) => {\n//   response.forEach(movie => {\n//     return movies.push({\n//       movieID: movie.id,\n//       movieTitle: movie.title,\n//       movieBackdrop: IMG_PATH + movie.backdrop_path,\n//     });\n//   });\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Home_link__2zIq5\"};","import { useState, useEffect } from 'react';\nimport css from './Home.module.css';\nimport { Link } from 'react-router-dom';\nimport { fetchMovies } from 'functions/api';\nimport { API_KEY } from '../../functions/api';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const BASE_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const fetchTrendingMovies = async () => {\n    setLoader(true);\n    const response = await fetchMovies(BASE_URL);\n\n    if (response) {\n      setLoader(false);\n      const trending = [...response.results];\n      return trending.map(movie => ({\n        title: movie.title,\n        id: movie.id,\n      }));\n    } else {\n      throw new Error('Error! Home page');\n    }\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await fetchTrendingMovies();\n      setMovies(response);\n    };\n    fetchMovies();\n    // eslint-disable-next-line\n  }, [URL]);\n\n  return (\n    <main>\n      <div>\n        <h2>Movies trending today</h2>\n        <ul>\n          {loader ? (\n            <Loader />\n          ) : (\n            movies &&\n            movies.length &&\n            movies.map(({ id, title }) => (\n              <li key={id}>\n                <Link className={css.link} to={`/movies/${id}`}>\n                  <p>{title}</p>\n                </Link>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["visible","height","width","ariaLabel","className","css","API_KEY","fetchMovies","url","fetch","then","resp","json","catch","error","console","log","BASE_URL","useState","movies","setMovies","loader","setLoader","fetchTrendingMovies","response","trending","results","map","movie","title","id","Error","useEffect","URL","Loader","length","to"],"sourceRoot":""}